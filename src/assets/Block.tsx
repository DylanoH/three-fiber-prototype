/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei/core/useGLTF'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    StrijpS_Gebouw_01_BlokErOnder: THREE.Mesh
  }
  materials: {
    M_Gebouw_01_BlokErOnder: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(
    '/assets/StrijpS_Gebouw_01_BlokErOnder.glb'
  ) as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StrijpS_Gebouw_01_BlokErOnder.geometry}
        material={materials.M_Gebouw_01_BlokErOnder}
        position={[-119.545135, 6.07, -93.12509]}
        rotation={[0, -0.49498606, 0]}
        userData={{ name: 'StrijpS_Gebouw_01_BlokErOnder' }}
      />
    </group>
  )
}
useGLTF.preload('/assets/StrijpS_Gebouw_01_BlokErOnder.glb')
