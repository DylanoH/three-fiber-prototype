/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useGLTF } from '@react-three/drei/core/useGLTF'

export default function Model(props) {
  const [active, setActive] = useState(false)

  useEffect(() => {
    document.body.style.cursor = active ? 'pointer' : 'auto'
  }, [active])

  const group = useRef(null)
  // const { nodes, materials } = useGLTF('/assets/StrijpS_Gebouw_01.glb')
  const { nodes, materials } = useGLTF('/assets/compressed-haasjeover.glb')

  let position
  if (group.current !== null) position = group.current.position
  return (
    <group {...props} dispose={null}>
      <group
        ref={group}
        // position={props.position}
        position={[-114.292229, 0, -72.47771]}
        rotation={[0, -0.4974189, 0]}
        userData={{ name: 'StrijpS_Gebouw_01', body: 'haasje over text' }}
        onClick={() =>
          props.playFocusAnimations(position.x, position.y, position.z)
        }
        onPointerOver={() => setActive(true)}
        onPointerOut={() => setActive(false)}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.StrijpS_Gebouw_01_1.geometry}
          material={materials.M_Gebouw_01}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.StrijpS_Gebouw_01_2.geometry}
          material={materials.M_5060Faces_directUnwrap_Windows}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/assets/compressed-haasjeover.glb')
